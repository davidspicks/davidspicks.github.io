{"version":3,"sources":["Picks.js","SelectBadgeFilters.js","SelectDateRange.js","App.js","index.js"],"names":["picksObj","require","listBadges","badge","className","key","id","src","image","alt","name","style","width","height","listLinks","link","href","URL","target","rel","listEvents","event","sponsor","sponsorURL","dates","Date2","Date","Date2Ms","getTime","setTime","parse","startDate","endDate","titleURL","title","badges","map","dangerouslySetInnerHTML","__html","description","links","Picks","filters","dateRange","dateformat","weekday","year","month","day","Date1","value","dateDispl","eventsFiltered2","Events","filter","length","i","j","includes","Heading","toLocaleString","SelectBadgeFilters","setFilters","options","label","onChange","e","isMulti","SelectDateRange","setDateRange","dateOptions","defaultValue","App","useState","useEffect","storedFilters","JSON","localStorage","getItem","setItem","stringify","fontSize","class","ReactDOM","render","document","getElementById"],"mappings":"46uBACIA,EAAWC,EAAQ,IAGvB,SAASC,EAAYC,GACnB,OAAO,wBAAMC,UAAU,QAAQC,IAAKF,EAAMG,IAC1C,uBAAKC,IAAKJ,EAAMK,MACdJ,UAAU,QACVK,IAAKN,EAAMO,KACXC,MAAO,CAACC,MAAO,OAAQC,OAAQ,WAMnC,SAASC,EAAWC,GAClB,OAAO,wBAAMV,IAAKU,EAAKT,IACvB,qBACEF,UAAU,WACVY,KAAMD,EAAKE,IACXC,OAAO,SACPC,IAAI,uBAEHJ,EAAKL,OAMV,SAASU,EAAYC,GACnB,IAAIC,EAGFA,EAFoB,KAAlBD,EAAMC,QAEA,iCAGR,uBAAKlB,UAAU,WAAf,IAA0B,qBACxBA,UAAU,cACVY,KAAMK,EAAME,WACZL,OAAO,SACPC,IAAI,uBAEHE,EAAMC,SANT,OAUF,IAOIE,EANAC,EAAM,IAAIC,KACVC,EAAUF,EAAMG,UA6BtB,OA5BED,GAAY,OACZF,EAAMI,QAASF,GAMbH,EAFEE,KAAKI,MAAMT,EAAMU,WAAaN,EAE1B,iCAEA,wBAAMrB,UAAU,SAAQ,2BAAUiB,EAAMU,UAAxC,OAAuDV,EAAMW,SAmBhE,uBAAK5B,UAAU,QAAQC,IAAOgB,EAAMf,IACzC,8BAAQ,qBACNF,UAAU,aACVY,KAAMK,EAAMY,SACZf,OAAO,SACPC,IAAI,uBAEHE,EAAMa,QAET,wBAAM9B,UAAU,UAAUiB,EAAMc,OAAOC,IAAIlC,IAC1CsB,EACD,2BAAS,wBAAMpB,UAAU,cACvBiC,wBAAyB,CAACC,OAAOjB,EAAMkB,eAEzC,wBAAMnC,UAAU,aAAaiB,EAAMmB,MAAMJ,IAAItB,IAC5CQ,GAIY,SAASmB,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,UAqBvC,IAAIC,EAAa,CACfC,QAAS,QACTC,KAAM,UACNC,MAAO,QACPC,IAAK,WAKHC,EAAQ,IAAIvB,KACZD,EAAM,IAAIC,KACVC,EAAUF,EAAMG,UAChBe,EAAUO,MACZvB,GALS,OAKGgB,EAAUO,MAEtBvB,GAAY,OACdF,EAAMI,QAASF,GAUf,IAAIwB,EAAY,IAAIzB,KACpByB,EAAUtB,QAAQoB,GAGlB,IACIG,EADkBpD,EAASqD,OAAOC,QAhDtC,SAAkBjC,GAElB,GAAuB,IAAnBqB,EAAQa,OACV,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAInC,EAAMc,OAAOoB,OAAQC,IAErC,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAQa,OAAQE,IACpC,GAAIpC,EAAMc,OAAOqB,GAAG9C,KAAKgD,SAAShB,EAAQe,GAAGP,OAC3C,OAAO,EAKX,OAAO,KAmC6BI,QAbtC,SAAqBjC,GAGnB,IAFA4B,EAAQvB,KAAKI,MAAMT,EAAMU,YAEZN,EACX,OAAO,KAWX,OACE,2BACE,0BAAKzB,EAAS2D,SACd,4CAAoBR,EAAUS,eAAe,QAAShB,GAAtD,OAAuEnB,EAAMmC,eAAe,QAAShB,IACrG,4BAAOQ,EAAgBG,OAAvB,WACAH,EAAgBhB,IAAIhB,GACnB,6CACA,4BAAOpB,EAASqD,OAAOE,OAAvB,WACDvD,EAASqD,OAAOjB,IAAIhB,I,WCzJX,SAASyC,EAAT,GAAsD,IAAxBnB,EAAuB,EAAvBA,QAASoB,EAAc,EAAdA,WAgBpD,OAAc,kBAAC,IAAD,CACZxD,GAAG,gBACHyD,QAhB2B,CACzB,CAAEb,MAAO,iBAAkBc,MAAO,QACjC,CAAEd,MAAO,eAAgBc,MAAO,QAChC,CAAEd,MAAO,cAAec,MAAO,QAC/B,CAAEd,MAAO,eAAgBc,MAAO,QAChC,CAAEd,MAAO,eAAgBc,MAAO,SAYnCC,SATA,SAA2BC,GAElBJ,EAAHI,GACY,KAOlBC,SAAO,EACPjB,MAAOR,ICrBI,SAAS0B,EAAT,GAAsD,EAA3BzB,UAA4B,IAAjB0B,EAAgB,EAAhBA,aAE7CC,EAAc,CAClB,CAAEpB,MAAO,IAAKc,MAAO,aACrB,CAAEd,MAAO,IAAKc,MAAO,WACrB,CAAEd,MAAO,IAAKc,MAAO,WACrB,CAAEd,MAAO,IAAKc,MAAO,YAWvB,OACA,kBAAC,IAAD,CACE1D,GAAK,oBACLiE,aAAc,CAACD,EAAY,IAC3BP,QAASO,EACTL,SAbF,SAAyBC,GAErBG,EADEH,GAGW,QCsCJM,MA9Cf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACN/B,EADM,KACGoB,EADH,KAIbY,qBAAU,WACR,IAAMC,EAAgBC,KAAK9C,MAAM+C,aAAaC,QAPxB,sBAQlBH,GAAeb,EAAWa,KAC7B,IAEHD,qBAAU,WACRG,aAAaE,QAZS,oBAYkBH,KAAKI,UAAUtC,MACtD,CAACA,IAXS,MAaqB+B,mBAAS,IAb9B,mBAaN9B,EAbM,KAaK0B,EAbL,KAeb,OACE,oCACA,yBAAKjE,UAAU,cACd,yBAAKA,UAAU,aACd,wBAAIO,MAAO,CAACsE,SAAU,SAAtB,iBACA,uBAAGtE,MAAO,CAACsE,SAAU,SAArB,2DACA,6CAIF,yBAAKC,MAAM,UAAU5E,GAAG,QAAxB,+BAEA,kBAACuD,EAAD,CAAoBnB,QAASA,EAASoB,WAAYA,IAClD,6BAHA,mBAIA,kBAACM,EAAD,CAAiBzB,UAAWA,EAAW0B,aAAcA,IACrD,kBAAC5B,EAAD,CAAOC,QAASA,EAASC,UAAWA,KAIpC,4BACA,4BAAI,uBAAGuC,MAAM,SAASlE,KAAK,SAAvB,cACJ,4BAAI,uBAAGA,KAAK,SAAR,WACJ,4BAAI,uBAAGA,KAAK,YAAR,WACJ,4BAAI,uBAAGA,KAAK,UAAR,c,wBCvCRmE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.292379f0.chunk.js","sourcesContent":["import * as React from 'react'\r\nvar picksObj = require(\"./picks_content.json\")\r\n\r\n//render badge collection for an event\r\nfunction listBadges (badge) {\r\n  return <span className=\"Badge\" key={badge.id}>\r\n  <img src={badge.image} \r\n    className=\"badge\" \r\n    alt={badge.name} \r\n    style={{width: '18px', height: '18px'}}\r\n  />\r\n  </span>\r\n}\r\n\r\n//render info link collection for an event\r\nfunction listLinks (link) {\r\n  return <span key={link.id}>\r\n  <a\r\n    className=\"InfoLink\"\r\n    href={link.URL}\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n  >\r\n    {link.name}\r\n  </a>  \r\n</span>\r\n}\r\n\r\n//render a single event\r\nfunction listEvents (event) {\r\n  let sponsor;\r\n  if (event.sponsor === \"\")\r\n  {\r\n    sponsor=<></>\r\n  }else{\r\n    sponsor=\r\n    <div className=\"Sponsor\">(<a\r\n      className=\"SponsorLink\"\r\n      href={event.sponsorURL}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      {event.sponsor}\r\n    </a>)  </div>\r\n  }\r\n\r\n  var msWk = 1000*60*60*24*7\r\n  var Date2=new Date();\r\n  var Date2Ms = Date2.getTime()\r\n  Date2Ms += (1 * msWk) // Offset by 1 wk\r\n  Date2.setTime( Date2Ms );\r\n\r\n  //show dates for events > 1 week\r\n  let dates;\r\n  if (Date.parse(event.startDate) < Date2)\r\n  {\r\n    dates=<></>\r\n  }else{\r\n    dates=<span className=\"Dates\"><br></br>{event.startDate} To {event.endDate}</span>\r\n  }\r\n  \r\n  /*\r\n  let dateformat = {\r\n    weekday: 'short',\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  };\r\n\r\n  //prepare date for rendering\r\n  var date1 = Date.parse(event.startDate)\r\n  var date1Displ = new Date()\r\n  date1Displ.setTime(date1)\r\n  var date2 = Date.parse(event.endDate)\r\n  var date2Displ = new Date()\r\n  date2Displ.setTime(date2)\r\n  */\r\nreturn <div className=\"Event\" key = {event.id}>\r\n  <strong><a   \r\n    className=\"Title-link\"\r\n    href={event.titleURL}\r\n    target=\"_blank\"\r\n    rel=\"noopener noreferrer\"\r\n  >\r\n    {event.title}\r\n  </a></strong>\r\n  <span className=\"Badges\">{event.badges.map(listBadges)}</span>\r\n  {dates}\r\n  <br></br><span className=\"Description\" \r\n    dangerouslySetInnerHTML={{__html:event.description}}>\r\n  </span>\r\n  <span className=\"InfoLinks\">{event.links.map(listLinks)}</span>\r\n  {sponsor}\r\n</div>\r\n}\r\n\r\nexport default function Picks({ filters, dateRange }){\r\n\r\n  //filter events containing user selected badges\r\n  function hasBadge(event){\r\n  //return all when no filters checked\r\n  if (filters.length === 0)\r\n    return true;\r\n  //loop through badges and return true if match to a checked filter\r\n  for (var i = 0; i < event.badges.length; i++) {\r\n      //console.log('name'+ event.badges[i].name)\r\n      for (var j = 0; j < filters.length; j++) {\r\n      if (event.badges[i].name.includes(filters[j].value)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n    //no match for checked filters\r\n    return false;\r\n  }\r\n\r\n  //https://developer.mozilla.org/en-US/docs/web/javascript/reference/global_objects/date/tolocalestring\r\n  let dateformat = {\r\n    weekday: 'short',\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric'\r\n  };\r\n\r\n  //arithemetic for date range filter\r\n  var msWk = 1000*60*60*24*7\r\n  var Date1 = new Date()\r\n  var Date2=new Date();\r\n  var Date2Ms = Date2.getTime()\r\n  if (dateRange.value)\r\n    Date2Ms += (dateRange.value * msWk) // Offset by n week(s)\r\n  else\r\n    Date2Ms += (1 * msWk) // Offset by 1 wk\r\n  Date2.setTime( Date2Ms );\r\n\r\n  function inDateRange(event){\r\n    Date1 = Date.parse(event.startDate)\r\n    //if ( Date.parse(event.startDate) < Date.parse(picksObj.fromDate)+(dateRange.value * msWk))\r\n    if ( Date1 < Date2)\r\n      return true\r\n  }\r\n\r\n  //prepare date for rendering\r\n  var dateDispl = new Date()\r\n  dateDispl.setTime(Date1)\r\n  //console.log(dateDispl)\r\n\r\n  var eventsFiltered1 = picksObj.Events.filter(hasBadge)\r\n  var eventsFiltered2 = eventsFiltered1.filter(inDateRange)\r\n\r\n  return (\r\n    <div>\r\n      <h2>{picksObj.Heading}</h2>\r\n      <h3>Filtered List: {dateDispl.toLocaleString('en-us', dateformat)} To {Date2.toLocaleString('en-us', dateformat)}</h3>\r\n      <span>{eventsFiltered2.length} Events</span>\r\n     {eventsFiltered2.map(listEvents)}\r\n       <h3>Unfiltered List</h3>\r\n       <span>{picksObj.Events.length} Events</span>\r\n     {picksObj.Events.map(listEvents)}\r\n     </div>\r\n    \r\n  ) \r\n}\r\n","import React from 'react'\r\n//https://react-select.com/home\r\n//$ npm i react-select\r\nimport Select from 'react-select'\r\n\r\nexport default function SelectBadgeFilters({ filters, setFilters }) {\r\n    //HACK!! TODO: initialize badge list dynamically from post.json file data\r\n    const badgeFilterOptions = [\r\n      { value: 'Free Admission', label: 'Free' }\r\n     , { value: 'Kid Friendly', label: 'Kids' }\r\n     , { value: 'Beer Garden', label: 'Beer' }\r\n     , { value: 'Wine Tasting', label: 'Wine' }\r\n     , { value: 'Pet Friendly', label: 'Pets' }\r\n    ]\r\n  \r\n    function handleBadgeFilter(e){\r\n      //save state\r\n      if (e) setFilters(e)\r\n      else setFilters([])\r\n    }\r\n  \r\n  return (      <Select \r\n    id=\"badge-filters\"\r\n    options={badgeFilterOptions}\r\n    onChange={handleBadgeFilter}\r\n    isMulti\r\n    value={filters}\r\n  />\r\n)\r\n}\r\n","import React from 'react'\r\n//https://react-select.com/home\r\n//$ npm i react-select\r\nimport Select from 'react-select'\r\n\r\nexport default function SelectDateRange({ dateRange, setDateRange }) {\r\n\r\n  const dateOptions = [\r\n    { value: '1', label: 'This Week' },\r\n    { value: '2', label: '2 Weeks' },\r\n    { value: '3', label: '3 Weeks' },\r\n    { value: '4', label: '1 Month' }\r\n  ]\r\n  \r\n  function handleDateRange(e){\r\n    if (e) \r\n      setDateRange(e)\r\n    else\r\n      setDateRange('1')\r\n    //console.log(dateRange.value)\r\n  }\r\n\r\n  return (    \r\n  <Select \r\n    id = \"select-date-range\"\r\n    defaultValue={[dateOptions[0]]} \r\n    options={dateOptions}\r\n    onChange={handleDateRange}\r\n  />\r\n)\r\n}\r\n","import React, { useState, useEffect } from 'react';\n// $ npm i uuid\n//import uuidv4 from 'uuid/v4'\nimport Picks from './Picks'\n// $ npm i react-select\nimport SelectBadgeFilters from './SelectBadgeFilters'\nimport SelectDateRange from './SelectDateRange'\n\nconst LOCAL_STORAGE_KEY = 'filterApp.filters'\n\nfunction App() {\n  const [filters, setFilters] = useState([])\n   \n  //called once each page load and not again due to empty array of dependencies won't change\n  useEffect(() => {\n    const storedFilters = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedFilters) setFilters(storedFilters)\n  }, []) //empty dependency array \n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(filters))\n  }, [filters])\n\n  const [dateRange, setDateRange] = useState([])\n\n  return (\n    <>\n    <div className=\"hero-image\">\n    \t<div className=\"hero-text\">\n    \t\t<h1 style={{fontSize: '50px'}}>David's Picks</h1>\n    \t\t<p style={{fontSize: '15px'}}>Things to do on the weekend in the greater Seattle area</p>\n    \t\t<button>Comment</button>\n      </div>\n    </div>\n    \n    <div class=\"content\" id=\"root\">\n    Show only events containing:\n    <SelectBadgeFilters filters={filters} setFilters={setFilters} />\n    <br></br>Show events for:\n    <SelectDateRange dateRange={dateRange} setDateRange={setDateRange} />  \n    <Picks filters={filters} dateRange={dateRange}/>\n\n    </div>\n\n    <ul>\n    <li><a class=\"active\" href=\"#root\">Find more</a></li>\n    <li><a href=\"#news\">Link 1</a></li>\n    <li><a href=\"#contact\">Link 2</a></li>\n    <li><a href=\"#about\">Link 3</a></li>\n    </ul>\n  \n\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './css/styles.css';\nimport './css/hero.css';\nimport './css/content.css';\nimport './css/nav.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}